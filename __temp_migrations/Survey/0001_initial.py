# Generated by Django 2.2.12 on 2021-07-31 18:53

from django.db import migrations, models
import django.db.models.deletion
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_group', to='otree.Session')),
            ],
            options={
                'db_table': 'Survey_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='survey_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'Survey_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('First_name', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Your First Name')),
                ('Last_name', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Your Last Name')),
                ('Email', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Your UCSC email')),
                ('Student_ID', otree.db.models.IntegerField(null=True, verbose_name='Your UCSC student ID')),
                ('Session_date', otree.db.models.StringField(max_length=10000, null=True, verbose_name='The session date you are attending (mm/dd/yyyy)')),
                ('Participant_ID', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Your participant ID (The participant ID is the user name in the Zoom chat room (e.g. leeps_x where x is a number). If you are not assigned and ID, fill in "show-up")')),
                ('Venmo_ID', otree.db.models.StringField(max_length=10000, null=True, verbose_name='Your Venmo account ID (We will pay you in 48 hours after the session ends.)')),
                ('Comments', otree.db.models.LongStringField(null=True, verbose_name='Is there any part of the experiment that makes your confusing? Please give us some comments.')),
                ('Strategy', otree.db.models.LongStringField(null=True, verbose_name='How do you play this game? Please describe your strategy based on your role and the rules.')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Survey.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='survey_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Survey.Subsession')),
            ],
            options={
                'db_table': 'Survey_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Survey.Subsession'),
        ),
    ]
